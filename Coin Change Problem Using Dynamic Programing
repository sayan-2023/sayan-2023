//C++
#include <bits/stdc++.h>
using namespace std;

// Returns the count of ways we can
// sum S[0...m-1] coins to get sum n
int dp[1006][1000];
int count(int S[], int m, int n)
{
	
	// If n is 0 then there is 1 solution
	// (do not include any coin)
	if (n == 0)
		return 1;
	
	if (n < 0)
		return 0;


	if (m <= 0)
		return 0;
  if(dp[m][n]!=-1)
    return dp[m][n];
	
	return dp[m][n]=count(S, m - 1, n) +
		count(S, m, n - S[m - 1]);
}

// Driver code
int main()
{	memset(dp,-1,sizeof(dp));
	int i, j;
	int arr[] = { 1, 2, 3 };
	int m = sizeof(arr) / sizeof(arr[0]);
	
	cout << " " << count(arr, m, 4);
	
}
