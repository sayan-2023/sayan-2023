Given an array of integers arr[] consisting of N integers, the task is to minimize the sum of the given array by performing at most K operations, where each operation involves reducing an array element arr[i] to floor(arr[i]/2).
Examples :

Input: N = 4, a[] = {20, 7, 5, 4}, K = 3 
Output: 17 
Explanation: 
Operation 1: {20, 7, 5, 4} -> {10, 7, 5, 4} 
Operation 2: {10, 7, 5, 4} -> {5, 7, 5, 4} 
Operation 3: {5, 7, 5, 4} -> {5, 3, 5, 4} 
No further operation can be performed. Therefore, sum of the array = 17.
Input: N = 4, a[] = {10, 4, 6, 16}, K = 2 
Output: 23
//C++


# include<iostream>
#include<bits/stdc++.h>
using namespace std;

int minsum(int a[],int n,int k)
{

    priority_queue<int>q;


    for(int i=0;i<n;i++)
    {

        q.push(a[i]);
    }
    while(!q.empty() && k>0)
    {

        int top=q.top()/2;

        q.pop();

        q.push(top);
        k--;
    }

    int sum=0;
    while(!q.empty())
    {

        sum+=q.top();

        q.pop();
    }
    return sum;
}



int main()
{

    int N,K;
    cin>>N;
    cin>>K;
    int arr[100];
    for (int i=0;i<N;i++)
        cin>>arr[i];
    cout<<(minsum(arr,N,K));
    }

