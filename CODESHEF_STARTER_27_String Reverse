Chef has a string S consisting only of English lowercase letters (a - z). However, Hitesh does not like it and wants it to be reversed.

Hitesh wonders what is the minimum number of operations required to reverse the string S using the following operation:

Select any i such that 1≤i≤|S| and remove Si from its original position and append it to the end of the string (i.e. shift any character to the end of the string).
For e.g. if S= abcde and we apply operation on i=2, then S becomes acdeb.

Help Hitesh find the minimum number of operations required to reverse S.

It is guaranteed that it is possible to reverse the string in a finite number of operations.

Input Format
The first line of input contains a single integer T, denoting the number of test cases. The description of T test cases follows.
Each test case consists of a single line containing the string S.
Output Format
For each test case, output the minimum number of operations required to reverse the string S.

Constraints
1≤T≤103
1≤|S|≤105
Sum of |S| over all testcases does not exceed 2⋅105.
Sample Input 1 
2
abdeba
codechef
Sample Output 1 
3
7
Explanation
Test case-1: Following steps can be performed:
abdeba→abebad
abebad→abeadb
abeadb→abedba
Test case-2: following steps can be performed:
codechef→codechfe
codechfe→codecfeh
codecfeh→codefehc
codefehc→codfehce
codfehce→cofehced
cofehced→cfehcedo
cfehcedo→fehcedoc


//C++
#include <bits/stdc++.h>
#define nl "\n"
#define ll long long
#define all(v) v.begin(), v.end()
using namespace std;

void helper()
{

    string s;
    cin >> s;
    string B = s;
    reverse(all(s));
    int m = s.length(), num = B.length();
    int TIH[256];
    memset(TIH, 0, sizeof(TIH));
    for (int i = 0; i < num; i++)
        TIH[B[i]]++;
    for (int i = 0; i < num; i++)
        TIH[s[i]]--;
    int ans = 0;
    for (int i = num - 1, j = num - 1; i >= 0;)
    {
        while (i >= 0 && s[i] != B[j])
        {
            i--;
            ans++;
        }
        if (i >= 0)
        {
            i--;
            j--;
        }
    }
    cout << ans << "\n";
}

int main()
{
    // your code goes here
    long long test;
    cin >> test;

    for (long long i = 0; i < test; i++)
    {
        helper();
    }
    return 0;
}

